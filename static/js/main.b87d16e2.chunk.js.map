{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["queryString","require","App","props","applyClick","e","ty","vl","a","sections","document","querySelectorAll","i","length","classList","remove","target","add","setState","updateState","q","updateQueryStringParameter","window","location","href","history","pushState","path","callAPI","state","apiResponse","isLoading","year","launch","land","undefined","parsed","parse","search","launch_year","this","launch_success","land_success","YearListArray","push","key","className","onClick","Date","getFullYear","uri","value","re","RegExp","separator","indexOf","match","replace","filter","fetch","then","response","json","responseJson","catch","error","style","backgroundColor","fontWeight","borderBottom","marginBottom","cursor","callYear","id","map","data","index","paddingBottom","border","height","alt","src","links","mission_patch_small","width","fontSize","paddingTop","mission_name","flight_number","mission_id","toString","Component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b87d16e2.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport './App.css';\nconst queryString = require('query-string');\n\n\n  class App extends Component {\n  constructor(props) {\n    super();\n   \n    this.state = { apiResponse: [],isLoading: true,year:'',launch:'',land:'' };\n  \n\n    }\n    async componentDidMount(): Promise<void> {\n    //alert(this.props.match.params.launch_year)\n    const parsed = queryString.parse(window.location.search);\n    if(parsed.launch_year!=undefined){\n      await this.setState({'year':parsed.launch_year }, this.updateState);\n    }\n    if(parsed.launch_success!=undefined){\n      await this.setState({'launch':parsed.launch_success }, this.updateState);\n    }\n    if(parsed.land_success!=undefined){\n      await this.setState({'land':parsed.land_success }, this.updateState);\n    }\n \n    this.callAPI();\n\n\n}\n\ncallYear() {\n  var YearListArray=[]\n\n    for (let i = 2006; i <= new Date().getFullYear(); i++) {\n      YearListArray.push(<div key={i} className={\"col-md-5 text-center year  \"+ (this.state.year == i ? 'active_h' : 'inactive_h')} onClick={e => this.applyClick(e,'year',i)}  >{i}</div>);\n    }\n    return YearListArray;\n  \n}\n\n//applyClick(e,ty,vl) {\n  applyClick= async(e,ty,vl)=>{\n \nvar sections = document.querySelectorAll('.'+ty);\n    for (let i = 0; i < sections.length; i++){\n        sections[i].classList.remove('active_h');\n    }\ne.target.classList.add('active_h');\nvar q;\nif(ty=='year'){\n  await this.setState({'year':vl }, this.updateState);\n   q= this.updateQueryStringParameter(window.location.href,'launch_year',vl);\n  window.history.pushState({path:q},'',q);\n} else if(ty=='launch'){\n  await this.setState({'launch':vl }, this.updateState);\n   q= this.updateQueryStringParameter(window.location.href,'launch_success',vl);\n  window.history.pushState({path:q},'',q);\n} else if(ty=='land') {\n  await this.setState({'land':vl }, this.updateState);\n   q= this.updateQueryStringParameter(window.location.href,'land_success',vl);\n  window.history.pushState({path:q},'',q);\n}\n\nthis.callAPI();\n\n\n\n}\nupdateQueryStringParameter(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n  }\n  else {\n    return uri + separator + key + \"=\" + value;\n  }\n}\nupdateState = () => {\n  \n}\n\n\ncallAPI() {\n\n\tthis.setState({ isLoading: true,apiResponse: [] });\nvar filter='';\n  \nif(this.state.year!=''){\nfilter += \"&launch_year=\"+this.state.year\n}\nif(this.state.launch!=''){\n  filter += \"&launch_success=\"+this.state.launch\n  }\n  if(this.state.land!=''){\n    filter += \"&land_success=\"+this.state.land\n    }\n//alert(filter);\n\n\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=100\"+filter)\n\t.then((response) => response.json())\n      .then((responseJson) => {\n      \n      // console.log(JSON.stringify(responseJson));\n        if(responseJson!=''){\n\t\t\n         //alert(JSON.stringify(responseJson.data));\n this.setState({ apiResponse: responseJson,isLoading:false })\n \n\t\n       \n      } else {\n  this.setState({ isLoading:false })\n      \n      }\n\n\n      })\n      .catch((error) =>{\n   \n      });\n\t\n\t\n\t\n    \n}\n\n\n\nrender(){\n\n \n\n    return (\n    <>\n     \n       \n     <div className=\"container\" style={{backgroundColor:'#f8f8f8'}} >\n   <h4 style={{fontWeight:'bold'}}>SpaceX Launch Program</h4>\n\n   <div className=\"col-md-12\">\n   <div className=\"col-md-3 hidden-sm\">\n   <p><b>Filters</b></p>\n   <p className=\"text-center\" style={{borderBottom:'1px solid black'}}>Launch years</p>\n\n   <div className=\"col-md-12 \" style={{marginBottom: '30px',cursor:'pointer'}} >\n  {this.callYear()}\n   \n \n   </div>\n\n\n   \n   <p className=\"text-center\" style={{borderBottom:'1px solid black'}}>Successful Launch</p>\n\n   <div className=\"col-md-12 \" style={{marginBottom: '30px',cursor:'pointer'}}>\n   \n   <div className={\"col-md-5 text-center launch \"+ (this.state.launch == 'true' ? 'active_h' : 'inactive_h')}  onClick={e => this.applyClick(e,'launch','true')}    >True</div>\n   <div className={\"col-md-5 text-center launch \"+ (this.state.launch == 'false' ? 'active_h' : 'inactive_h')}  onClick={e => this.applyClick(e,'launch','false')}    >False</div>\n   \n   \n   </div>\n\n   <p className=\"text-center\" style={{borderBottom:'1px solid black'}}>Successful Landing</p>\n\n   <div className=\"col-md-12 \" style={{marginBottom: '30px',cursor:'pointer'}}>\n\n   <div className={\"col-md-5 text-center land \"+ (this.state.land == 'true' ? 'active_h' : 'inactive_h')} onClick={e => this.applyClick(e,'land','true')}  >True</div>\n   <div className={\"col-md-5 text-center land \"+ (this.state.land == 'false' ? 'active_h' : 'inactive_h')} onClick={e => this.applyClick(e,'land','false')}  >False</div>\n\n   \n   </div>\n   </div>\n   <div className=\"col-md-9\">\n     { this.state.isLoading &&\n   <div id=\"load_page_loader\" >Loading...</div>\n     }\n<div className=\"col-md-12\" >\n{this.state.apiResponse=='' && this.state.isLoading == false &&\n<h3>No data found!!</h3>\n\n    }\n{this.state.apiResponse!='' && this.state.isLoading == false &&\n this.state.apiResponse.map((data, index) => (\n<div key={index} className=\"col-md-3\" style={{paddingBottom:'10px',border:'5px solid white',height:'350px'}}>\n<div className=\"text-center\">\n  \n<img alt='SpaceX' src={data.links.mission_patch_small} width={180} height={180} ></img>\n</div>\n<p style={{fontSize:'12px',paddingTop:'10px'}}><b>{data.mission_name} #{data.flight_number}</b></p>\n<p style={{fontSize:'12px',paddingTop:'10px'}}><b>Mission Ids:</b> { data.mission_id!='' && data.mission_id.toString()  }</p>\n<p style={{fontSize:'12px'}}><b>Launch year:</b>{data.launch_year} </p>\n<p style={{fontSize:'12px'}}><b>Successful Launch:</b>{data.launch_success==1 ? 'True' : 'False'}</p>\n</div>\n ))\n  \n\n}\n\n\n</div>\n\n   </div>\n   </div>\n   </div>\n\n\n\n          \n    </>\n  );\n\n}\n\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}